
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.*;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


public class DashBoard extends javax.swing.JFrame {

    /**
     * Creates new form DashBoard
     */
    public DashBoard() {
        initComponents();
        DisplayElections();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Statement st = null;
    
    private void DisplayElections(){
    
        try{
            con =DriverManager.getConnection("jdbc:mysql://localhost:3306/final","root","");
            st = con.createStatement();
            rs = st.executeQuery("select * from electiontbl");
            ElectionsTable.setModel(DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
        
        }
    
        
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ElectionsTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        CandidatePictureLbl = new javax.swing.JLabel();
        WinnerLbl = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        BravoLbl = new javax.swing.JLabel();
        VotesLbl = new javax.swing.JLabel();
        PercentageLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(243, 188, 0));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("ELECTIONS MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel4)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        jLabel5.setBackground(new java.awt.Color(2, 0, 3));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Voting Application");

        ElectionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ElectionsTable.setSelectionBackground(new java.awt.Color(243, 188, 0));
        ElectionsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ElectionsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ElectionsTable);

        jButton4.setBackground(new java.awt.Color(102, 102, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back-49-32.png"))); // NOI18N
        jButton4.setText("Back");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        CandidatePictureLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CandidatePictureLbl.setText("Photo:");

        WinnerLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        WinnerLbl.setText("Names:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Elections List");

        BravoLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BravoLbl.setForeground(new java.awt.Color(0, 153, 51));
        BravoLbl.setText("WINNER");

        VotesLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        VotesLbl.setForeground(new java.awt.Color(0, 153, 51));
        VotesLbl.setText("VOTES");

        PercentageLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        PercentageLbl.setForeground(new java.awt.Color(0, 153, 51));
        PercentageLbl.setText("Percentage");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(298, 298, 298)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel5)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(CandidatePictureLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(VotesLbl)
                                            .addComponent(PercentageLbl)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(WinnerLbl))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(324, 324, 324)
                                .addComponent(jButton4)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(BravoLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(8, 8, 8)
                .addComponent(BravoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CandidatePictureLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(VotesLbl)
                        .addGap(26, 26, 26)
                        .addComponent(PercentageLbl)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WinnerLbl)
                .addGap(21, 21, 21)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    int WinnerId, Votes, Percentage;
    
    private void GetWinner(){
    
        try{
            
            con =DriverManager.getConnection("jdbc:mysql://localhost:3306/final","root","");
            st = con.createStatement();
            String query = "SELECT CandidateId, COUNT(CandidateId) AS VoteCount " +
                       "FROM VotesTbl WHERE ElectId = " + key + " " + 
                       "GROUP BY CandidateId ORDER BY VoteCount DESC LIMIT 1";
            rs = st.executeQuery(query);
            while(rs.next()){
            
                //JOptionPane.showMessageDialog(this, ""+rs.getInt(1));
                WinnerId = rs.getInt(1);
                
            }
        
        }catch(SQLException e){
        
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private ImageIcon ResizePhoto(String ImagePath, byte[] pic){
    
        ImageIcon MyImage = null;
        if(ImagePath!=null){
        
            MyImage = new ImageIcon(ImagePath);
        }else{
        
            MyImage = new ImageIcon(pic);
        }
        
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(CandidatePictureLbl.getWidth(), CandidatePictureLbl.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    
    private void GetWinnerData(){
    
        String query = "select Cphoto,Cname from candidatetbl where CId="+WinnerId;
        Statement st;
        ResultSet rs;
        try{
        
            con =DriverManager.getConnection("jdbc:mysql://localhost:3306/final","root","");
            st = con.createStatement();
            rs = st.executeQuery(query);
            if(rs.next()){
            
                CandidatePictureLbl.setIcon(ResizePhoto(null,rs.getBytes("Cphoto")));
                WinnerLbl.setText(rs.getString("CName"));
            }
            
        }catch(Exception e){
        
        }
    
    }
    
     private void GetVotes(){
    
        try{
            
            con =DriverManager.getConnection("jdbc:mysql://localhost:3306/final","root","");
            st = con.createStatement();
            String query = "SELECT COUNT(CandidateId) FROM VotesTbl WHERE CandidateId =" + WinnerId;
            rs = st.executeQuery(query);
            while(rs.next()){
            
                
                Votes = rs.getInt(1);
                VotesLbl.setText(Votes +" Votes");
               // JOptionPane.showMessageDialog(this, ""+Votes);
            }
        
        }catch(SQLException e){
        
            JOptionPane.showMessageDialog(this, e);
        }
    
    }
     
     int TotalVotes;
     double WinPercentage;
     /*
     private void GetPercentage(){
    
        try{
            
            con =DriverManager.getConnection("jdbc:mysql://localhost:3306/final","root","");
            st = con.createStatement();
            String query = "SELECT COUNT(*) FROM VotesTbl WHERE ElectId = " + key;
            rs = st.executeQuery(query);
            while(rs.next()){
            
                
                TotalVotes = rs.getInt(1);
                System.out.println(TotalVotes);
                
                WinPercentage = (Votes/TotalVotes)*100;
                System.out.println(WinPercentage);
                PercentageLbl.setText(WinPercentage + " %");
               // JOptionPane.showMessageDialog(this, ""+Votes);
            }
        
        }catch(SQLException e){
        
            JOptionPane.showMessageDialog(this, e);
        }
    
    }
     
     */
     
     private void GetPercentage() {
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;

    try {
        // Establish the database connection
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/final", "root", "");
        st = con.createStatement();

        // Query to get the total number of votes for the election
        String queryTotalVotes = "SELECT COUNT(*) FROM VotesTbl WHERE ElectId = " + key;
        rs = st.executeQuery(queryTotalVotes);

       
        if (rs.next()) {
            TotalVotes = rs.getInt(1); 
        }

        
        String queryVotesForCandidate = "SELECT COUNT(*) FROM VotesTbl WHERE ElectId = " + key + " AND CandidateId = " + WinnerId;
        rs = st.executeQuery(queryVotesForCandidate);

        
        int candidateVotes = 0;
        if (rs.next()) {
            candidateVotes = rs.getInt(1);
        }

        
        if (TotalVotes > 0) {
            WinPercentage = (double) candidateVotes / TotalVotes * 100;
        } else {
            WinPercentage = 0; 
        }

        
        PercentageLbl.setText(String.format("%.2f %%", WinPercentage));

    } catch (SQLException e) {
        
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    } finally {
        
        try {
            if (rs != null) rs.close();
            if (st != null) st.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error closing resources: " + e.getMessage());
        }
    }
}
    
    
    int key =-1;
    private void ElectionsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ElectionsTableMouseClicked

        DefaultTableModel model = (DefaultTableModel) ElectionsTable.getModel();
        int Myindex = ElectionsTable.getSelectedRow();
        key = Integer.valueOf(model.getValueAt(Myindex, 0).toString());
        GetWinner();
        GetWinnerData();
        GetVotes();
        GetPercentage();
        
        //FetchPhoto();
        // TODO add your handling code here:
    }//GEN-LAST:event_ElectionsTableMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked

        
        new MainMenu().setVisible(true);
        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked

    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BravoLbl;
    private javax.swing.JLabel CandidatePictureLbl;
    private javax.swing.JTable ElectionsTable;
    private javax.swing.JLabel PercentageLbl;
    private javax.swing.JLabel VotesLbl;
    private javax.swing.JLabel WinnerLbl;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
